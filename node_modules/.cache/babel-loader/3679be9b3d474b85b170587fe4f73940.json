{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\bookshelf\\\\src\\\\components\\\\Header.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport setDark from '../redux/actions/setDark'; // import blackSearch from \"../images/blackSearch.png\";\n\nimport { HeaderWrapper, HeaderButtonWrap } from '../styles/components/HeaderStyle';\nexport const Header = props => {\n  _s();\n\n  const isDark = useSelector(state => state.dark.mode);\n  const dispatch = useDispatch();\n\n  const toggleDarkMode = mode => {\n    if (mode) {\n      dispatch(setDark(\"IS_LIGHT\"));\n    } else {\n      dispatch(setDark(\"IS_LIGHT\"));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(HeaderWrapper, {\n    isBorder: props.isBorder,\n    isDark: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"logo1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, \"BOOK\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"logo2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 40\n    }\n  }, \"shelf\")), /*#__PURE__*/React.createElement(HeaderButtonWrap, {\n    isDark: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"darkMode\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"darkMode__para\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }\n  }, \"Dark\"), /*#__PURE__*/React.createElement(\"label\", {\n    class: \"switch\",\n    for: \"checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    id: \"checkbox\",\n    onChange: () => toggleDarkMode(isDark),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"slider round\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"signUpHeader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, \"Sign Up\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"loginHeader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, \"Login\")));\n};\n\n_s(Header, \"EKO9+HxgA7mnk1A6I+7YD4aCwDE=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["D:/Projects/bookshelf/src/components/Header.jsx"],"names":["React","useDispatch","useSelector","setDark","HeaderWrapper","HeaderButtonWrap","Header","props","isDark","state","dark","mode","dispatch","toggleDarkMode","isBorder"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,OAAP,MAAoB,0BAApB,C,CACA;;AACA,SAASC,aAAT,EAAwBC,gBAAxB,QAAgD,kCAAhD;AAEA,OAAO,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAMC,MAAM,GAAGN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWC,IAArB,CAA1B;AACA,QAAMC,QAAQ,GAAGX,WAAW,EAA5B;;AAEA,QAAMY,cAAc,GAAIF,IAAD,IAAU;AAC7B,QAAGA,IAAH,EAAQ;AACJC,MAAAA,QAAQ,CAACT,OAAO,CAAC,UAAD,CAAR,CAAR;AACH,KAFD,MAEK;AACDS,MAAAA,QAAQ,CAACT,OAAO,CAAC,UAAD,CAAR,CAAR;AACH;AACJ,GAND;;AAQA,sBACI,oBAAC,aAAD;AAAe,IAAA,QAAQ,EAAEI,KAAK,CAACO,QAA/B;AAAyC,IAAA,MAAM,EAAE,IAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAA2B;AAAM,IAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA3B,CADJ,eAMI,oBAAC,gBAAD;AAAkB,IAAA,MAAM,EAAE,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAO,IAAA,KAAK,EAAC,QAAb;AAAsB,IAAA,GAAG,EAAC,UAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,EAAE,EAAC,UAA1B;AAAqC,IAAA,QAAQ,EAAE,MAAMD,cAAc,CAACL,MAAD,CAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAK,IAAA,KAAK,EAAC,cAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAFJ,CADJ,eAQI;AAAQ,IAAA,SAAS,EAAC,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eARJ,eASI;AAAQ,IAAA,SAAS,EAAC,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aATJ,CANJ,CADJ;AAoBH,CAhCM;;GAAMF,M;UACMJ,W,EACED,W;;;KAFRK,M","sourcesContent":["import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport setDark from '../redux/actions/setDark';\r\n// import blackSearch from \"../images/blackSearch.png\";\r\nimport { HeaderWrapper, HeaderButtonWrap } from '../styles/components/HeaderStyle';\r\n\r\nexport const Header = (props) => {\r\n    const isDark = useSelector(state => state.dark.mode);\r\n    const dispatch = useDispatch();\r\n\r\n    const toggleDarkMode = (mode) => {\r\n        if(mode){\r\n            dispatch(setDark(\"IS_LIGHT\"));\r\n        }else{\r\n            dispatch(setDark(\"IS_LIGHT\"));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <HeaderWrapper isBorder={props.isBorder} isDark={true}>\r\n            <div className=\"logo1\">BOOK<span className=\"logo2\">shelf</span></div>\r\n            {/* <div className=\"search\">\r\n                <input className=\"searchBar\" placeholder=\"search . . .\" />\r\n                <img className=\"searchImg\" src={blackSearch} alt=\"blackSearch\" />\r\n            </div> */}\r\n            <HeaderButtonWrap isDark={true}>\r\n                <div className=\"darkMode\">\r\n                    <div className=\"darkMode__para\">Dark</div>\r\n                    <label class=\"switch\" for=\"checkbox\">\r\n                        <input type=\"checkbox\" id=\"checkbox\" onChange={() => toggleDarkMode(isDark)} />\r\n                        <div class=\"slider round\"></div>\r\n                    </label>\r\n                </div>\r\n                <button className=\"signUpHeader\">Sign Up</button>\r\n                <button className=\"loginHeader\">Login</button>\r\n            </HeaderButtonWrap>\r\n        </HeaderWrapper>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}